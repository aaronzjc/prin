name: Main CI

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  Build_and_Release:
    name: Build & Release & Deploy
    runs-on: ubuntu-latest
    env:
      SHA8: ${GITHUB_SHA::8}
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: setup nodejs
        uses: actions/setup-node@v1
      - name: restore node cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: build frontend
        run: make vue
      - name: setup go env
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: restore Go mod cache
        uses: actions/cache@v2
        with:
         path: ~/go/pkg/mod
         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
         restore-keys: |
           ${{ runner.os }}-go-
      - name: build app dist
        run: |
          make prin
      - name: prepare docker
        id: prep
        run: |
          DOCKER_IMAGE=aaronzjc/prin
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="latest,$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=deploy::sha-${GITHUB_SHA::8}
      - name: set docker buildx
        uses: docker/setup-buildx-action@v1
      - name: docker login
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: docker build & push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.tags }}
      - name: setup ktl
        uses: azure/setup-kubectl@v1
        id: install
      - name: deploy
        run: |
          cat << EOF > kube-config
          ${{ secrets.KUBECONF }}
          EOF
          export KUBECONFIG=$(pwd)/kube-config
          curl -o prin.yml https://raw.githubusercontent.com/aaronzjc/k3s/main/Deployment/prin.yml
          echo ${{ steps.prep.outputs.deploy }}
          kubectl rollout restart -f prin.yml -n k3s-apps
